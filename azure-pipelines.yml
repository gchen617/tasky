# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8a21f43f-4e6f-42bc-a7ad-b5edd6f8db37'
  imageRepository: 'gchentasky'  # Adjusted to match the manifest
  containerRegistry: 'wiztecheval.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'wiztechevalfdc5-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build and Push Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    environment: 'gchen617tasky.default'
    strategy:
      runOnce:
        deploy:
          steps:
          # Step 1: Create imagePullSecret for pulling images from ACR
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          # Step 2: Create MongoDB secret in Kubernetes
          - task: KubernetesManifest@0
            displayName: Apply MongoDB Secret
            inputs:
              action: apply
              namespace: default
              manifests: |
                - apiVersion: v1
                  kind: Secret
                  metadata:
                    name: mongodb-secret
                    namespace: default
                  type: Opaque
                  stringData:
                    connection_string: "mongodb://mongoadmin:WizForTheWorld@10.0.0.6:27017/taskdb?authSource=admin"

          # Step 3: Create ConfigMap for wizexercise.txt file
          - task: KubernetesManifest@0
            displayName: Apply ConfigMap
            inputs:
              action: apply
              namespace: default
              manifests: |
                - apiVersion: v1
                  kind: ConfigMap
                  metadata:
                    name: exercise-file
                    namespace: default
                  data:
                    wizexercise.txt: |
                      This file is part of the Wiz exercise deployment.
                      Deployment timestamp: Sun Oct 27 08:26:44 EDT 2024

          # Step 4: Deploy to Kubernetes cluster using the manifest files
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

